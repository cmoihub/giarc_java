import java.util.ArrayList;

/**
 * 
 */

/**
 * @author JaspreetSanghra
 * @studentId 100893501
 */
public class Hand 
{
	public enum Kind 
	{
		HIGH_CARD, 
		PAIR, 
		TWO_PAIR, 
		THREE_OF_A_KIND, 
		STRAIGHT, 
		FLUSH, 
		FULL_HOUSE, 
		FOUR_OF_A_KIND, 
		STRAIGHT_FLUSH
	}
	
	private ArrayList<Card> cards;

	public Hand(String handCode)
	{
		handCode = handCode.trim().replaceAll(" +", " ");
		String[] cardCodes = handCode.split(" ");
		if(cardCodes.length != 5)
		{
			throw new IllegalArgumentException("ERROR: Please provide a full hand of 5 cards, only [" + cardCodes.length + "] cards found in [" + handCode + "].");
		}
		cards = new ArrayList<Card>(5);
		addCards(cardCodes);
	}

	private void addCards(String[] cardCodes) 
	{
		for (String card : cardCodes) 
		{
			addCard(card);
		}
	}

	private void addCard(String cardCode) 
	{
		cards.add(new Card(cardCode));
	}

	/**
	 * This method is already implemented and could be useful! 
	 * @returns the "kind" of the hand: flush, full house, etc.
	 */
	public Kind kind() 
	{
		if (isStraight() && isFlush()) return Kind.STRAIGHT_FLUSH;
		else if (hasNKind(4)) return Kind.FOUR_OF_A_KIND; 
		else if (hasNKind(3) && hasNKind(2)) return Kind.FULL_HOUSE;
		else if (isFlush()) return Kind.FLUSH;
		else if (isStraight()) return Kind.STRAIGHT;
		else if (hasNKind(3)) return Kind.THREE_OF_A_KIND;
		else if (isTwoPair()) return Kind.TWO_PAIR;
		else if (hasNKind(2)) return Kind.PAIR; 
		else return Kind.HIGH_CARD;
	}

}
