package Problem;
import java.util.*;

import extractor.Extractor;
import feature.BaseFeature;
import feature.ComplexFeature;
import feature.NumberFeature;
import feature.StringFeature;
public class ProblemModel {

	//Value of k nearest neighbours 
	private int numNeighbours;
	private List<Example> trainingExamples;
	private GeneralPredictor predictor;
	
	public ProblemModel(int numNeighbours, List<Example> trainingExamples) {
		this.numNeighbours = numNeighbours;
		this.trainingExamples = trainingExamples;
		this.predictor = new GeneralPredictor();
	}
	
	public Object getPrediction(Example test) {
		return this.predictor.getPrediction(this.numNeighbours, this.trainingExamples, test);
	}
	
	public static Example housingExampleStructure() {
		//tuple 3
		Example t3 = new Example();
		ComplexFeature coord1 = new ComplexFeature("Coordinates");
			NumberFeature lat1 = new NumberFeature(0,"Lat");
			NumberFeature lon1 = new NumberFeature(0,"Lon");
		coord1.addFeature(lat1);coord1.addFeature(lon1);
		NumberFeature sqft1 = new NumberFeature(0,"Square Feet");
		StringFeature age1 = new StringFeature("new","Age");
		NumberFeature price1 = new NumberFeature(0,"Price");
		t3.addFeature(coord1);t3.addFeature(sqft1);t3.addFeature(age1);
		t3.addFeature(price1);
		
		return t3;
	}

	public static void housingExampleStructure_(){
		String[] housing = new String[]{}
	}
	
	public static Example soccerExampleStructure() {
		String[] soccer = new String[]{"0","0","0","0","0","0","0","0","kick"};
		
		return Extractor.createExample(soccer);
		
	}
	
	
	public static ProblemModel generateHousingModel() {

		//tuple 3
		Example t3 = new Example();
		ComplexFeature coord1 = new ComplexFeature("Coordinates");
			NumberFeature lat1 = new NumberFeature(12,"Lat");
			NumberFeature lon1 = new NumberFeature(25,"Lon");
		coord1.addFeature(lat1);coord1.addFeature(lon1);
		NumberFeature sqft1 = new NumberFeature(1200,"Square Feet");
		StringFeature age1 = new StringFeature("new","Age");
		NumberFeature price1 = new NumberFeature(500000,"Price");
		t3.addFeature(coord1);t3.addFeature(sqft1);t3.addFeature(age1);
		t3.addFeature(price1);
		
		//tuple 4 
		Example t4 = new Example();
		ComplexFeature coord2 = new ComplexFeature("Coordinates");
			NumberFeature lat2 = new NumberFeature(10,"Lat");
			NumberFeature lon2 = new NumberFeature(50,"Lon");
		coord2.addFeature(lat2);coord2.addFeature(lon2);
		NumberFeature sqft2 = new NumberFeature(1000,"Square Feet");
		StringFeature age2 = new StringFeature("old","Age");
		NumberFeature price2 = new NumberFeature(300000,"Price");
		t4.addFeature(coord2);t4.addFeature(sqft2);t4.addFeature(age2);
		t4.addFeature(price2);

		//tuple 5
		Example t5 = new Example();
		ComplexFeature coord3 = new ComplexFeature("Coordinates");
			NumberFeature lat3 = new NumberFeature(30,"Lat");
			NumberFeature lon3 = new NumberFeature(100,"Lon");
		coord3.addFeature(lat3);coord3.addFeature(lon3);
		NumberFeature sqft3 = new NumberFeature(800,"Square Feet");
		StringFeature age3 = new StringFeature("new","Age");
		NumberFeature price3 = new NumberFeature(400000,"Price");
		t5.addFeature(coord3);t5.addFeature(sqft3);t5.addFeature(age3);
		t5.addFeature(price3);
		
		ArrayList<Example> trainingExamples = new ArrayList<Example>();
		trainingExamples.add(t3);trainingExamples.add(t4);
		trainingExamples.add(t5);
		

		
		int k = 1;
		

		return new ProblemModel(k,trainingExamples);
	}
	public List<Example> getTrainingExamples(){
		return this.trainingExamples;
	}
	
//	public static void main(String[] args) {
//		ProblemModel p = ProblemModel.generateHousingModel();
//		
////		for(Example e :p.getTrainingExamples()) {
////			for(BaseFeature f: e.getFeatures()) {
////				System.out.println(f.getName());
////			}
////		}
//		
//		//testExample
//		Example t = new Example();
//		ComplexFeature coord = new ComplexFeature("Coordinates");
//			NumberFeature lat = new NumberFeature(15,"Lat");
//			NumberFeature lon = new NumberFeature(20,"Lon");
//			coord.addFeature(lat);coord.addFeature(lon);
//		NumberFeature sqft = new NumberFeature(800,"Square Feet");
//		StringFeature age = new StringFeature("new","Age");
//		NumberFeature price = null;
//		t.addFeature(coord);t.addFeature(sqft);t.addFeature(age);
//		t.addFeature(price);
////		System.out.println(p.getPrediction(t));
//	}
	
	
}
