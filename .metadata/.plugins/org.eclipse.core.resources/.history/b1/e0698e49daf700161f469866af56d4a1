package Assignment3;

import java.util.*;
import java.util.regex.*;

public class TestInfix2PostfixConverter{
	
	void getInput(){
		Scanner infix = new Scanner(System.in);
		
		System.out.println("Please give an expression in infix format");
		//infix.
		
		infix.close();
	}
	
	String convertPostfix(String infixExpression){
		StackReferenceBased operandStack = 
				new StackReferenceBased ();
		List<String> postFix = new ArrayList<>();
		List <String> infixExpressions = convertStringToArray(infixExpression);
		for (String expression : infixExpressions){
			if(isOperand(expression)){
				postFix.add(expression);
			}
			else if(expression == "("){
				operandStack.push(Integer.valueOf(expression));
			}
		}
		return null;
	}
	
	Integer getPostfix(String postFixEpression){
		StackReferenceBased operandStack = 
				new StackReferenceBased();
		
		List<String> operands = new ArrayList<>();
		operands = convertStringToArray(postFixEpression);
		
		for (String operand : operands){
			if(isOperand(operand)){
				operandStack.push(Integer.valueOf(operand));
			}
			else{
				Integer operand2 = (Integer) operandStack.pop();
				Integer operand1 = (Integer) operandStack.pop();
				Integer result = calculate(operand, operand1, operand2);	
			}
		}
		return (Integer) operandStack.pop();
	}
	
	//make an array of strings without delimiters
	public static List<String> convertStringToArray(String exp){
	    String regex = "(\\d+\\.\\d+)|(\\d+)|([+-/*])|([/(/)])";

	    Matcher m = Pattern.compile(regex).matcher(exp);

	    List strings = new LinkedList();

	    while (m.find()) {
	        strings.add(m.group());
	    }
	    
	    System.out.println(strings);
	    return strings;
	}
	
	public static boolean isOperand(String op){
	    String numbers = "0123456789.";
	    int a = numbers.indexOf(op);
	    return a >= 0;
	}
	
	boolean isOperator(String operand){
		switch(operand){
			case "*": return true;
			case "+": return true;
			case "/": return true;
			case "-": return true;
			case "(": return true;
			case ")": return true;
			default: return false;
		}
	}
	
	int calculate(String operator, int operand1, int operand2){
		int result = 1;
		switch(operator){
		case "*": result = operand1*operand2;
		case "+": result = operand1+operand2;
		case "/": result = operand1/operand2;
		case "-": result = operand1-operand2;		
		default:
			System.out.println("invalid operand found: please use either *, +, / or -");
			break;
		}
		return result;
	}
	
	static void output(){
		//input
		System.out.println("infix: ");
		//convertPostfix
		System.out.println("postfix: ");
		//getPostfix
		System.out.println("result: ");
		
	    String exp = "15+20+(3.84*25)*(78/3.8)";
	    convertStringToArray(exp);
	    
	    //System.out.println(Integer.valueOf("("));
	}
	
	public static void main (String args[]){
		output();
	}

}